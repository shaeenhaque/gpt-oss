name: Monitoring Tests

on:
  push:
    paths:
      - 'gpt_oss/monitoring/**'
      - 'tests/monitoring/**'
      - '.github/workflows/ci-monitoring.yml'
  pull_request:
    paths:
      - 'gpt_oss/monitoring/**'
      - 'tests/monitoring/**'
      - '.github/workflows/ci-monitoring.yml'

jobs:
  test-monitoring:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[monitoring,test]"
    
    - name: Run monitoring tests
      run: |
        pytest tests/monitoring/ -v --tb=short
    
    - name: Run monitoring tests (fast only)
      run: |
        pytest tests/monitoring/ -v --tb=short -k "not slow"
    
    - name: Test CLI
      run: |
        python -m gpt_oss.monitoring.__main__ --help
    
    - name: Test basic functionality
      run: |
        python -c "
        from gpt_oss.monitoring import HallucinationMonitor
        monitor = HallucinationMonitor()
        results = monitor.evaluate('Test prompt', 'Test completion')
        print(f'Risk level: {results[\"risk_level\"]}')
        print(f'Risk score: {results[\"risk_score\"]:.3f}')
        "
